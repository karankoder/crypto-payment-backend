import { GoogleGenAI } from '@google/genai';
import { geminiApiKey } from '../config/constants.js';

if (!geminiApiKey) {
  throw new Error('GEMINI_API_KEY is not defined in your .env file.');
}

const ai = new GoogleGenAI({ apiKey: geminiApiKey });

export const getWalletAnalysis = async (simplifiedHistory) => {
  const prompt = `You are a concise blockchain data analyst. A user has provided the 20 most recent transactions from a wallet on the Polygon Amoy testnet.
    
Based on this transaction history:
${JSON.stringify(simplifiedHistory, null, 2)}

Please provide a brief, one-paragraph (2-3 sentences) analysis of this wallet's behavior. 

Focus on:
1. Activity Level (e.g., high, low, sporadic)
2. Likely Profile (e.g., a developer, a bot, a new user, a trader)
3. Key Pattern (e.g., only receiving funds, sending small test amounts, interacting with a specific contract)

Be direct and analytical. Start with "This wallet appears to be..."
`;

  try {
    const response = await ai.models.generateContent({
      model: 'gemini-2.5-flash',
      contents: prompt,
    });

    const text = response.text;
    if (!text) {
      console.warn('Gemini API returned an empty text response.');
      return 'No analysis could be generated by the model.';
    }
    return text;
  } catch (error) {
    console.error('Error calling Gemini API:', error);
    throw new Error(error.message || 'Failed to get analysis from Gemini API');
  }
};
